import 'package:flutter/material.dart';

import '../widgets/settings_dialog.dart';

class LearnAboutGajalsPage extends StatelessWidget {
  const LearnAboutGajalsPage({super.key});

  @override
  Widget build(BuildContext context) {
    final isDarkMode = Theme.of(context).brightness == Brightness.dark;

    return Scaffold(
      backgroundColor:
          isDarkMode ? const Color(0xFF2C1810) : const Color(0xFFFFFDF5),
      appBar: AppBar(
        title: Container(
          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Container(
                padding:
                    const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    colors: [
                      const Color(0xFFD2691E).withOpacity(0.8),
                      const Color(0xFFFF8C42).withOpacity(0.6),
                    ],
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                  ),
                  borderRadius: BorderRadius.circular(20),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.black.withOpacity(0.2),
                      blurRadius: 8,
                      offset: const Offset(0, 2),
                    ),
                  ],
                ),
                child: const Text(
                  'рдЧрдЬрд▓рдЧрдо',
                  style: TextStyle(
                    fontSize: 24,
                    fontWeight: FontWeight.bold,
                    color: Colors.white,
                    fontFamily: 'Dancing Script',
                    letterSpacing: 1.2,
                    shadows: [
                      Shadow(
                        color: Colors.black26,
                        offset: Offset(1, 1),
                        blurRadius: 2,
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
        backgroundColor: const Color(0xFFD2691E),
        foregroundColor: Colors.white,
        elevation: 4,
        centerTitle: true,
        flexibleSpace: Container(
          decoration: const BoxDecoration(
            gradient: LinearGradient(
              colors: [
                Color(0xFFD2691E),
                Color(0xFFFF8C42),
              ],
              begin: Alignment.topLeft,
              end: Alignment.bottomRight,
            ),
          ),
        ),
        actions: [
          Container(
            margin: const EdgeInsets.only(right: 12),
            decoration: BoxDecoration(
              gradient: LinearGradient(
                colors: isDarkMode
                    ? [
                        const Color(0xFF4A3728).withOpacity(0.9),
                        const Color(0xFF6B4E3D).withOpacity(0.8),
                      ]
                    : [
                        const Color(0xFFF0E6D2).withOpacity(0.9),
                        const Color(0xFFE8DCC0).withOpacity(0.8),
                      ],
              ),
              borderRadius: BorderRadius.circular(15),
              border: Border.all(
                color: Colors.white.withOpacity(0.3),
                width: 1,
              ),
              boxShadow: [
                BoxShadow(
                  color: Colors.black.withOpacity(0.1),
                  blurRadius: 4,
                  offset: const Offset(0, 2),
                ),
              ],
            ),
            child: IconButton(
              icon: Icon(
                Icons.info_outline,
                color: isDarkMode
                    ? const Color(0xFFD4A574)
                    : const Color(0xFF8B4513),
                size: 24,
              ),
              onPressed: () => AppInfoDialog.show(context),
              tooltip: 'About',
            ),
          ),
        ],
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Container(
          width: double.infinity,
          height: double.infinity,
          decoration: BoxDecoration(
            color:
                isDarkMode ? const Color(0xFF2C1810) : const Color(0xFFFFFDF5),
            borderRadius: BorderRadius.circular(15),
            border: Border.all(
              color: const Color(0xFFD2691E),
              width: 2,
            ),
            boxShadow: [
              BoxShadow(
                color: Colors.black.withOpacity(0.1),
                blurRadius: 10,
                offset: const Offset(0, 5),
              ),
            ],
          ),
          child: Stack(
            children: [
              // Diary lines background
              CustomPaint(
                size: Size.infinite,
                painter: DiaryLinesPainter(),
              ),
              SingleChildScrollView(
                padding: const EdgeInsets.all(24),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    _buildDiarySection(
                        'ЁЯЯг рдЧрдЬрд▓ рдХреЗ рд╣реЛ?',
                        '''рдЧрдЬрд▓ рдПрдХ рдкреНрд░рдХрд╛рд░рдХреЛ рдХрд╡рд┐рддрд╛ рд╣реЛ, рдЬрд╕рдХреЛ рд╕реБрд░реБрд╡рд╛рдд рдЗрд╕реНрд▓рд╛рдореА рджреЗрд╢рд╣рд░реВрдорд╛ рдлрд╛рд░рд╕реА рд░ рдЕрд░рдмреА рднрд╛рд╖рд╛рдорд╛ рднрдпреЛ рд░ рдкрдЫрд┐ рдЙрд░реНрджреВ рд╣реБрдБрджреИ рдиреЗрдкрд╛рд▓реАрдорд╛ рдкрдирд┐ рдЧрд╣рд┐рд░реЛ рдкреНрд░рднрд╛рд╡ рдЫреЛрдбреЗрдХреЛ рдЫред 
рдпреЛ рдХрд╡рд┐рддрд╛ рдкреНрд░реЗрдо, рд╡рд┐рдпреЛрдЧ, рдЬреАрд╡рди-рджрд░реНрд╢рди, рд╕рдорд╛рдЬ, рдордиреЛрднрд╛рд╡, рдЕрдзреНрдпрд╛рддреНрдо рдЬрд╕реНрддрд╛ рдЧрд╣рд┐рд░рд╛ рднрд╛рд╡рдирд╛рд╣рд░реВ рдЕрднрд┐рд╡реНрдпрдХреНрдд рдЧрд░реНрди рдкреНрд░рдпреЛрдЧ рдЧрд░рд┐рдиреНрдЫред
рдЧрдЬрд▓рд▓рд╛рдИ рд╣рд╛рдореНрд░рд╛ рдиреЗрдкрд╛рд▓реА рд╢реНрд░реЛрддрд╛рд╣рд░реВрд▓реЗ рдЕрдЭ рдмрдвреА рдЖрддреНрдореАрдпрддрд╛рдХреЛ рд╕рд╛рде рдЧреНрд░рд╣рдг рдЧрд░реНрди рдерд╛рд▓реЗрдХрд╛ рдЫрдиреНред''',
                        isDarkMode),
                    const SizedBox(height: 24),
                    _buildDiarySection(
                        'ЁЯЯй рдЧрдЬрд▓рдХреЛ рд╕рдВрд░рдЪрдирд╛',
                        '''1. рд╢реЗрд░:
рдЧрдЬрд▓ рдЕрдиреЗрдХреМрдВ рд╢реЗрд░ рдмрд╛рдЯ рдмрдирд┐рдПрдХреЛ рд╣реБрдиреНрдЫред
рдкреНрд░рддреНрдпреЗрдХ рд╢реЗрд░ рджреБрдИ рдкрдЩреНрдХреНрддрд┐рдмрд╛рдЯ рдмрдиреЗрдХреЛ рд╣реБрдиреНрдЫ рд░ рддреНрдпреЛ рджреБрдИ рдкрдВрдХреНрддрд┐рд▓реЗ рдорд┐рд▓реЗрд░ рдПрдХ рд╕реНрд╡рддрдВрддреНрд░ рднрд╛рд╡рдирд╛ рд╡реНрдпрдХреНрдд рдЧрд░реНрдЫред
рдЙрджрд╛рд╣рд░рдг:
рдЫреЛрд░рд╛ рдо рд╕рдм рднрдПрд░ рдПрдХреНрд▓реЛ рдЖрд╢реНрд░рдордорд╛ рдЫреБ,
рдлреЗрд░реА рд╢рдмреНрдж рдЦрд░реНрдЪреА рдореЗрд░реЛ рдЦрдмрд░ рд╕реЛрдзреНрдиреБ рдкрд░реНрджреИрди ред

2. рдорддрд▓рд╛:
рдЧрдЬрд▓рдХреЛ рдкрд╣рд┐рд▓реЛ рд╢реЗрд░ рд╣реЛред
рдпрд╕рдорд╛ рджреБрдмреИ рдкрдВрдХреНрддрд┐рдорд╛ рд░рджреАрдл рдЖрдЙрдБрдЫред

3. рд░рджреАрдл:
рдЧрдЬрд▓рдХреЛ рд╣рд░реЗрдХ рджреЛрд╕реНрд░реЛ рдкрдЩреНрдХреНрддрд┐рдХреЛ рдЕрдиреНрддреНрдпрдорд╛ рдЖрдЙрдиреЗ рдПрдХреИ рд╢рдмреНрдж рд╡рд╛ рд╡рд╛рдХреНрдпрд╛рдВрд╢ рд╣реЛред
рдЬрд╕реНрддреИ:
рддрд┐рдореАрд▓рд╛рдИ рд╕рдореНрдЭрдиреНрдЫреБ...
рд╣рд░реЗрдХ рд░рд╛рдд рд╕рдореНрдЭрдиреНрдЫреБ...

4. рдХрд╛рдлрд┐рдпрд╛:
рд░рджреАрдл рдЕрдШрд┐рдХреЛ рддреБрдХрд┐рд▓рд╛ рд╢рдмреНрджрд╣рд░реВред
рдЬрд╕реНрддреИ: ...рдмрдиреНрдЫреБ, ...рд░рдиреНрдЫреБ, ...рдЫреБ

5. рдордХрддрд╛:
рдЧрдЬрд▓рдХреЛ рдЕрдиреНрддрд┐рдо рд╢реЗрд░рдорд╛ рдХрд╡рд┐рдХреЛ рдЙрдкрдирд╛рдо/рдирд╛рдо рдЖрдЙрдБрдЫред
рдпрд╕рд▓реЗ рд╡реНрдпрдХреНрддрд┐рдЧрдд рд╕реНрдкрд░реНрд╢ рджрд┐рдиреНрдЫред''',
                        isDarkMode),
                    const SizedBox(height: 24),
                    _buildDiarySection(
                        'ЁЯЯж рдЧрдЬрд▓ рд▓реЗрдЦреНрдиреЗ рдирд┐рдпрдорд╣рд░реВ',
                        '''рдПрдХреИ рдЧрдЬрд▓рднрд┐рддреНрд░ рдПрдЙрдЯреИ рд░рджреАрдл рдкреНрд░рдпреЛрдЧ рд╣реБрдиреБрдкрд░реНрдЫред
рд░рджреАрдл рдЕрдШрд┐рдХреЛ рдХрд╛рдлрд┐рдпрд╛ рдорд┐рд▓реНрдиреБрдкрд░реНрдЫред
рд╢реЗрд░рд╣рд░реВ рдПрдХ рдЕрд░реНрдХрд╛рд╕рдБрдЧ рд╡рд┐рд╖рдпрдорд╛ рд╕рд┐рдзрд╛ рдирдЬреЛрдбрд┐рдП рдкрдирд┐ рд╣реБрдиреНрдЫред
рд╢рдмреНрджрд╣рд░реВрдХреЛ рд▓рдп, рдореАрдЯрд░ рдорд┐рд▓рд╛рдЙрдиреБ рдЖрд╡рд╢реНрдпрдХ рдЫред
рдорддрд▓рд╛, рдордХрддрд╛ рдЕрдирд┐рд╡рд╛рд░реНрдп рд╣реБрдБрджреИрди, рддрд░ рдкреНрд░рднрд╛рд╡рд╢рд╛рд▓реА рд╣реБрдиреНрдЫред
рдЧрдЬрд▓ рдХрдореНрддрд┐рдорд╛ рел рд╢реЗрд░ рдХреЛ рд╣реБрдиреНрдЫред''',
                        isDarkMode),
                    const SizedBox(height: 24),
                    _buildDiarySection(
                        'ЁЯЯи рдЧрдЬрд▓ рд▓реЗрдЦреНрдиреЗ рдкреНрд░рдХреНрд░рд┐рдпрд╛',
                        '''рд╡рд┐рд╖рдп рдЪрдпрди рдЧрд░реНрдиреБрд╣реЛрд╕реН тАФ рдкреНрд░реЗрдо, рдкреАрдбрд╛, рд╕рдорд╛рдЬ, рд╕рдВрдШрд░реНрд╖ рдЖрджрд┐ред
рд░рджреАрдл рд░ рдХрд╛рдлрд┐рдпрд╛ рдирд┐рд░реНрдзрд╛рд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред
рд░рджреАрдл: "рд╕рдореНрдЭрдиреНрдЫреБ"
рдХрд╛рдлрд┐рдпрд╛: рдмрдиреНрдЫреБ, рдлрдиреНрдЫреБ, рдЧрдиреНрдЫреБ
рдкрд╣рд┐рд▓реЛ рд╢реЗрд░ рддрдпрд╛рд░ рдЧрд░реНрдиреБрд╣реЛрд╕реН тАФ рджреБрдмреИ рд▓рд╛рдЗрдирдорд╛ рд░рджреАрдл рдкреНрд░рдпреЛрдЧ рдЧрд░реЗрд░ред
рдЕрдм рдмрд╛рдБрдХреА рд╢реЗрд░рд╣рд░реВ рд▓реЗрдЦреНрдиреБрд╣реЛрд╕реНред
рдЕрдиреНрддрд┐рдордорд╛ рдордХрддрд╛ рд▓реЗрдЦреНрдиреБрд╣реЛрд╕реН тАФ рдирд╛рдо рд░рд╛рдЦреЗрд░ред''',
                        isDarkMode),
                    const SizedBox(height: 24),
                    _buildDiarySection(
                        'ЁЯза рдПрдХ рдЙрджрд╛рд╣рд░рдг рдЧрдЬрд▓:',
                        '''рдорддрд▓рд╛:
рдореИрд▓реЗ рдХреЛрд░реНрдиреЗ рдЧрдЬрд▓рд╣рд░реБрдХреЛ рдорд╣рддреНрд╡рдкреБрд░реНрдг рд╢реЗрд░ рд╣реМ рддрд┐рдореА
рдореЗрд░реЛ рд╣рд░реЗрдХ рд░рдЪрдирд╛рдХреЛ рд╢реНрд░реГрдЩреНрдЧрд╛рд░рд┐рдХ рдЕрдХреНрд╖рд░ рд╣реМ рддрд┐рдореА
рд╢реЗрд░рд╣рд░реВ:
рдорд╛рдкрди рд╣реБрдиреНрди рдЙрдирдХреЛ рдкреНрд░реЗрдордХреЛ рдпрддреА рднрдиреНрди рд╕рдХреНрдЫреБ 
рдореИрд▓реЗ рдлреЗрд░реНрдиреЗ рд╣рд░реЗрдХ рд╢реНрд╡рд╛рд╕рдХреЛ рдШрдбреА рдкрд▓рд╛ рдмреЗрд░ рд╣реМ рддрд┐рдореА 
рдзрдирд▓реЗ рдХрд╣рд┐рд▓реЗ рдзрдирд┐ рд╣реЛрд▓рд╛ рдХрд╣рд┐рд▓реЗ рд╣реЛрд▓рд╛ рдЧрд░рд┐рдм рдпрд╣рд╛рдБ 
рддрд░ рдорд╛рдпрд╛рдБ рд╕реНрдиреЗрд╣рдХреЛ рд╕рд░реНрдмреЛрдЪреНрдЪ рдХреБрдмреЗрд░ рд╣реМ рддрд┐рдореА''',
                        isDarkMode),
                    const SizedBox(height: 24),
                    _buildDiarySection(
                        'ЁЯТб рдЯрд┐рдкреНрд╕:',
                        '''рдЫреЛрдЯреЛ рд░ рднрд╛рд╡рдирд╛рддреНрдордХ рд╢рдмреНрдж рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред
рджреИрдирд┐рдХ рднреЛрдЧрд╛рдЗрд▓рд╛рдИ рд╢реЗрд░рдХреЛ рд░реВрдкрдорд╛ рд░реВрдкрд╛рдиреНрддрд░рдг рдЧрд░реНрдиреБрд╣реЛрд╕реНред
рдЖрдлреВрд▓реЗ рд▓реЗрдЦреЗрдХреЛ рдЧрдЬрд▓ рдмрд╛рд░рдореНрдмрд╛рд░ рдкрдвреНрдиреБрд╣реЛрд╕реН тАУ рд▓рдп рдорд┐рд▓реНрдЫ рдХрд┐ рдЬрд╛рдБрдЪ рдЧрд░реНрдиреБрд╣реЛрд╕реНред
рдкреНрд░рд╛рдп: рд╢реНрд░реЛрддрд╛рд▓реЗ рд╕рдЬрд┐рд▓реИ рдмреБрдЭреНрдиреЗ рд╕рд░рд▓ рднрд╛рд╖рд╛ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреБрд╣реЛрд╕реНред''',
                        isDarkMode),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildDiarySection(String title, String content, bool isDarkMode) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          title,
          style: TextStyle(
            fontSize: 20,
            fontWeight: FontWeight.bold,
            color:
                isDarkMode ? const Color(0xFFD4A574) : const Color(0xFF8B4513),
            height: 1.5,
          ),
        ),
        const SizedBox(height: 12),
        Text(
          content,
          style: TextStyle(
            fontSize: 16,
            height: 1.8,
            fontFamily: 'Dancing Script',
            color:
                isDarkMode ? const Color(0xFFE0E0E0) : const Color(0xFF2C2C2C),
          ),
        ),
      ],
    );
  }
}

class DiaryLinesPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    final paint = Paint()
      ..color = const Color(0xFFE8E8E8)
      ..strokeWidth = 1.0;

    const lineSpacing = 28.0;
    for (double y = 60; y < size.height - 20; y += lineSpacing) {
      canvas.drawLine(Offset(24, y), Offset(size.width - 24, y), paint);
    }
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) => false;
}
